
#A memorable password is generated by selecting n random words, adding a random 1 digit number to each word, and then concatenating them using a hyphen (-).
    #A memorable password should include arguments specifying the number of words and the available cases for those words. 
    #A list of available words can be downloaded top_english_nouns_lower_100000.txt 
import random as ran
import string 
import os 
class memorablePass:
    numwords=int
    # true if you want both cases and false for only one
    multicases=True
    # true for lowercase and false for upper
    defaultcase=False
    def __init__(self):
        self.numwords=2
        self.multicases
        self.defaultcase
    def setNumWords(self, x: int):
        self.numwords=x

    def setMultiCases(self, cases: bool):
        self.multicases=cases

    def setDefaultCase(self, default: bool):
        self.defaultcase=default

    def generate(self, num: int):
        if not os.path.exists("Documents/Memorable"):
            os.mkdir("Documents/Memorable")
        pass_file= open("Documents/Memorable/Generated_Passwords.txt", mode="w")
        
        word_file=open("Documents/top_english_nouns_lower_100000.txt",mode="r")
        word_list=word_file.readlines()
        word_file.close()

        
        password=str
        while num>0:
            x=self.numwords
            while x>0:
                wordnum=ran.randint(0,99999)
                word="".join([word_list[wordnum],str(ran.randint(0,9))])
                if self.defaultcase==False:
                    word= word.upper()
                if self.multicases==True:
                    randomCase= ran.randint(1,2)
                    if randomCase==1:
                        word=word.lower()
                    else:
                        word=word.upper()

                word=word.strip("\n")
                if x<self.numwords:
                    password="-".join([password,word])
                elif x==self.numwords:
                    password=word
               
                x=x-1
            #print(password)
            pass_file.write(password.replace("\n","")+"\n\n\n")
            num-=1

#A random password is generated by selecting n random characters from among a variety of different character types: lower case, upper case, numbers, and or punctuation symbols.
 #   A random password should include arguments specifying the length of the password, if they want punctuation symbols included, and any characters that aren't allowed in the password.



class randomPass:
    length=int
    # true allows punctuation false doesn't 
    punctuation=bool
    # if in the string it isnt allowed in the password
    notIncluded=str
    def __init__(self):
        self.length
        self.punctuation
        self.notIncluded
    def setlength(self, x: int):
        self.length=x

    def setPunc(self, punc: bool):
        self.punctuation=punc

    def setNotIncluded(self, notInc: str):
        self.notIncluded=notInc


    def generate(self, num: int):
        if not os.path.exists("Documents/Random"):
            os.mkdir("Documents/Random")
        pass_file= open("Documents/Random/Generated_Passwords.txt", mode="w")
        
        if self.punctuation:
            included_str=string.ascii_letters+string.digits+string.punctuation
        else:
            included_str=string.ascii_letters+string.digits

        if len(self.notIncluded)>0:
            for char in self.notIncluded:
                included_str=included_str.replace(char,"")
                included_str=included_str.replace(char.upper(),"")
            #print(included_str)
        
        password=""
        while num>0:
            x=self.length
            password=""
            while x>0:
                wordnum=ran.randint(0,len(included_str)-1)
                if wordnum==len(included_str)-1:
                    word=included_str[wordnum:]
                else:
                    word=included_str[wordnum:wordnum+1]
                

                
                password="".join([password,word])
                
                x=x-1
            #print(password)
            pass_file.write(password+"\n\n\n")

            num-=1

generator1=memorablePass
memorablePass.__init__(generator1)
generator1.setNumWords(generator1,2)
generator1.setDefaultCase(generator1,False)
generator1.setMultiCases(generator1,False)

#generator1.generate(generator,14)

gen2=randomPass
randomPass.__init__(gen2)
gen2.setlength(gen2,15)
gen2.setPunc(gen2, False)
gen2.setNotIncluded(gen2, "aeiou")

#gen2.generate(gen2, 3)

#Confirm that this works by generating 1000 passwords with the type chosen randomly between memorable and random.
memorable_num=ran.randint(0,1000)
random_num=1000-memorable_num
generator1.generate(generator1,memorable_num)
gen2.generate(gen2,random_num)